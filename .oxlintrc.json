{
    "$schema": "./node_modules/oxlint/configuration_schema.json",
    "plugins": [
        "import",
        "unicorn",
        "node",
        "oxc",
        "eslint",
        "promise",
        "vitest",
        "jsdoc"
    ],
    "env": {
        "node": true,
        "es6": true
    },
    "globals": {},
    "settings": {},
    "categories": {
        "correctness": "error",
        "perf": "error",
        "suspicious": "warn"
    },
    "rules": {
        "eqeqeq": "error",
        "import/no-cycle": "error",
        "no-unused-vars": [
            "error",
            {
                "caughtErrors": "none",
                "argsIgnorePattern": "^_",
                "varsIgnorePattern": "^_",
                "destructuredArrayIgnorePattern": "^_"
            }
        ],
        "no-await-in-loop": "off",
        "jsdoc/check-tag-names": [
            "warn",
            {
                "typed": true,
                "enableFixer": false
            }
        ],
        "jsdoc/require-yields": "off"
    },
    "overrides": [
        {
            "files": ["*.ts"],
            "plugins": ["typescript"],
            "rules": {
                "typescript/no-floating-promises": [
                    "error",
                    {
                        "ignoreVoid": true,
                        "ignoreIIFE": true
                    }
                ],
                "typescript/no-misused-promises": [
                    "error",
                    {
                        "checksVoidReturn": false,
                        "checksConditionals": true
                    }
                ],
                "typescript/await-thenable": "error",
                "typescript/no-array-delete": "error",
                "typescript/no-base-to-string": "error",
                "typescript/no-confusing-void-expression": "error",
                "typescript/no-duplicate-type-constituents": "error",
                "typescript/no-for-in-array": "error",
                "typescript/no-implied-eval": "error",
                "typescript/no-meaningless-void-operator": "error",
                "typescript/no-misused-spread": "error",
                "typescript/no-mixed-enums": "error",
                "typescript/no-redundant-type-constituents": "error",
                "typescript/no-unnecessary-boolean-literal-compare": "error",
                "typescript/no-unnecessary-template-expression": "error",
                "typescript/no-unnecessary-type-arguments": "error",
                "typescript/no-unnecessary-type-assertion": "off",
                "typescript/no-extraneous-class": "off",
                "typescript/no-unsafe-type-assertion": "off",
                "typescript/no-unsafe-enum-comparison": "error",
                "typescript/no-unsafe-return": "error",
                "typescript/no-unsafe-unary-minus": "error",
                "typescript/non-nullable-type-assertion-style": "error",
                "typescript/only-throw-error": "error",
                "typescript/prefer-promise-reject-errors": "error",
                "typescript/prefer-reduce-type-parameter": "error",
                "typescript/prefer-return-this-type": "error",
                "typescript/related-getter-setter-pairs": "error",
                "typescript/require-array-sort-compare": "error",
                "typescript/require-await": "error",
                "typescript/restrict-plus-operands": "error",
                "typescript/restrict-template-expressions": "error",
                "typescript/return-await": ["error", "always"],
                "typescript/switch-exhaustiveness-check": "error",
                "typescript/unbound-method": "error",
                "typescript/use-unknown-in-catch-callback-variable": "error"
            }
        },
        // Disable errors with `any | null` types
        {
            "files": [
                "lib/types/ContainerStatsResponse.ts",
                "lib/types/SystemVersionComponentsInner.ts"
            ],
            "plugins": ["typescript"],
            "rules": {
                "typescript/no-redundant-type-constituents": "off"
            }
        },
        // Disable errors with `@` character used within jsdoc description
        {
            "files": ["lib/types/ExecConfig.ts", "lib/docker-client.ts"],
            "rules": {
                "check-tag-names": "off"
            }
        }
    ]
}
