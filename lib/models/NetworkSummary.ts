/*
   Copyright 2025 Docker SDK authors

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
   https://openapi-generator.tech
   Do not edit the class manually.
 */

import { type ConfigReference } from '../models/ConfigReference.js';
import { type IPAM } from '../models/IPAM.js';
import { type PeerInfo } from '../models/PeerInfo.js';

/**
 * Network list response item
 */
export interface NetworkSummary {
    /**
     * Name of the network.
     */
    Name?: string;

    /**
     * ID that uniquely identifies a network on a single machine.
     */
    Id?: string;

    /**
     * Date and time at which the network was created in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds.
     */
    Created?: string;

    /**
     * The level at which the network exists (e.g. &#x60;swarm&#x60; for cluster-wide or &#x60;local&#x60; for machine level)
     */
    Scope?: string;

    /**
     * The name of the driver used to create the network (e.g. &#x60;bridge&#x60;, &#x60;overlay&#x60;).
     */
    Driver?: string;

    /**
     * Whether the network was created with IPv4 enabled.
     */
    EnableIPv4?: boolean;

    /**
     * Whether the network was created with IPv6 enabled.
     */
    EnableIPv6?: boolean;

    IPAM?: IPAM;

    /**
     * Whether the network is created to only allow internal networking connectivity.
     */
    Internal?: boolean;

    /**
     * Whether a global / swarm scope network is manually attachable by regular containers from workers in swarm mode.
     */
    Attachable?: boolean;

    /**
     * Whether the network is providing the routing-mesh for the swarm cluster.
     */
    Ingress?: boolean;

    ConfigFrom?: ConfigReference;

    /**
     * Whether the network is a config-only network. Config-only networks are placeholder networks for network configurations to be used by other networks. Config-only networks cannot be used directly to run containers or services.
     */
    ConfigOnly?: boolean;

    /**
     * Network-specific options uses when creating the network.
     */
    Options?: { [key: string]: string };

    /**
     * Metadata specific to the network being created.
     */
    Labels?: { [key: string]: string };

    /**
     * List of peer nodes for an overlay network. This field is only present for overlay networks, and omitted for other network types.
     */
    Peers?: Array<PeerInfo>;
}
