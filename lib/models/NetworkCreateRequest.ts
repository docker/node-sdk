/*
   Copyright 2025 Docker SDK authors

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
   https://openapi-generator.tech
   Do not edit the class manually.
 */

import { type ConfigReference } from '../models/ConfigReference.js';
import { type IPAM } from '../models/IPAM.js';

export interface NetworkCreateRequest {
    /**
     * The network\&#39;s name.
     */
    Name: string;

    /**
     * Name of the network driver plugin to use.
     */
    Driver?: string;

    /**
     * The level at which the network exists (e.g. &#x60;swarm&#x60; for cluster-wide or &#x60;local&#x60; for machine level).
     */
    Scope?: string;

    /**
     * Restrict external access to the network.
     */
    Internal?: boolean;

    /**
     * Globally scoped network is manually attachable by regular containers from workers in swarm mode.
     */
    Attachable?: boolean;

    /**
     * Ingress network is the network which provides the routing-mesh in swarm mode.
     */
    Ingress?: boolean;

    /**
     * Creates a config-only network. Config-only networks are placeholder networks for network configurations to be used by other networks. Config-only networks cannot be used directly to run containers or services.
     */
    ConfigOnly?: boolean;

    ConfigFrom?: ConfigReference;

    IPAM?: IPAM;

    /**
     * Enable IPv4 on the network.
     */
    EnableIPv4?: boolean;

    /**
     * Enable IPv6 on the network.
     */
    EnableIPv6?: boolean;

    /**
     * Network specific options to be used by the drivers.
     */
    Options?: { [key: string]: string };

    /**
     * User-defined key/value metadata.
     */
    Labels?: { [key: string]: string };
}
