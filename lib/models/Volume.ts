/*
   Copyright 2025 Docker SDK authors

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
   https://openapi-generator.tech
   Do not edit the class manually.
 */

import { type ClusterVolume } from '../models/ClusterVolume.js';
import { type VolumeUsageData } from '../models/VolumeUsageData.js';

export interface Volume {
    /**
     * Name of the volume.
     */
    Name: string;

    /**
     * Name of the volume driver used by the volume.
     */
    Driver: string;

    /**
     * Mount path of the volume on the host.
     */
    Mountpoint: string;

    /**
     * Date/Time the volume was created.
     */
    CreatedAt?: string;

    /**
     * Low-level details about the volume, provided by the volume driver. Details are returned as a map with key/value pairs: &#x60;{\&quot;key\&quot;:\&quot;value\&quot;,\&quot;key2\&quot;:\&quot;value2\&quot;}&#x60;.  The &#x60;Status&#x60; field is optional, and is omitted if the volume driver does not support this feature.
     */
    Status?: { [key: string]: any };

    /**
     * User-defined key/value metadata.
     */
    Labels: { [key: string]: string };

    /**
     * The level at which the volume exists. Either &#x60;global&#x60; for cluster-wide, or &#x60;local&#x60; for machine level.
     */
    Scope: VolumeScopeEnum;

    ClusterVolume?: ClusterVolume;

    /**
     * The driver specific options used when creating the volume.
     */
    Options: { [key: string]: string };

    UsageData?: VolumeUsageData | null;
}

export type VolumeScopeEnum = 'local' | 'global';
