/*
   Copyright 2025 Docker SDK authors

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
   https://openapi-generator.tech
   Do not edit the class manually.
 */

import { type ClusterVolumeSpecAccessModeAccessibilityRequirements } from '../models/ClusterVolumeSpecAccessModeAccessibilityRequirements.js';
import { type ClusterVolumeSpecAccessModeCapacityRange } from '../models/ClusterVolumeSpecAccessModeCapacityRange.js';
import { type ClusterVolumeSpecAccessModeSecretsInner } from '../models/ClusterVolumeSpecAccessModeSecretsInner.js';

/**
 * Defines how the volume is used by tasks.
 */
export interface ClusterVolumeSpecAccessMode {
    /**
     * The set of nodes this volume can be used on at one time. - &#x60;single&#x60; The volume may only be scheduled to one node at a time. - &#x60;multi&#x60; the volume may be scheduled to any supported number of nodes at a time.
     */
    Scope?: ClusterVolumeSpecAccessModeScopeEnum;

    /**
     * The number and way that different tasks can use this volume at one time. - &#x60;none&#x60; The volume may only be used by one task at a time. - &#x60;readonly&#x60; The volume may be used by any number of tasks, but they all must mount the volume as readonly - &#x60;onewriter&#x60; The volume may be used by any number of tasks, but only one may mount it as read/write. - &#x60;all&#x60; The volume may have any number of readers and writers.
     */
    Sharing?: ClusterVolumeSpecAccessModeSharingEnum;

    /**
     * Options for using this volume as a Mount-type volume.      Either MountVolume or BlockVolume, but not both, must be     present.   properties:     FsType:       type: \&quot;string\&quot;       description: |         Specifies the filesystem type for the mount volume.         Optional.     MountFlags:       type: \&quot;array\&quot;       description: |         Flags to pass when mounting the volume. Optional.       items:         type: \&quot;string\&quot; BlockVolume:   type: \&quot;object\&quot;   description: |     Options for using this volume as a Block-type volume.     Intentionally empty.
     */
    MountVolume?: any;

    /**
     * Swarm Secrets that are passed to the CSI storage plugin when operating on this volume.
     */
    Secrets?: Array<ClusterVolumeSpecAccessModeSecretsInner>;

    AccessibilityRequirements?: ClusterVolumeSpecAccessModeAccessibilityRequirements;

    CapacityRange?: ClusterVolumeSpecAccessModeCapacityRange;

    /**
     * The availability of the volume for use in tasks. - &#x60;active&#x60; The volume is fully available for scheduling on the cluster - &#x60;pause&#x60; No new workloads should use the volume, but existing workloads are not stopped. - &#x60;drain&#x60; All workloads using this volume should be stopped and rescheduled, and no new ones should be started.
     */
    Availability?: ClusterVolumeSpecAccessModeAvailabilityEnum;
}

export type ClusterVolumeSpecAccessModeScopeEnum = 'single' | 'multi';
export type ClusterVolumeSpecAccessModeSharingEnum =
    | 'none'
    | 'readonly'
    | 'onewriter'
    | 'all';
export type ClusterVolumeSpecAccessModeAvailabilityEnum =
    | 'active'
    | 'pause'
    | 'drain';
