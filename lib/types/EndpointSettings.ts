/*
   Copyright 2025 Docker SDK authors

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
   https://openapi-generator.tech
   Do not edit the class manually.
 */

import { type EndpointIPAMConfig } from '../types/EndpointIPAMConfig.js';

/**
 * Configuration for a network endpoint.
 */
export interface EndpointSettings {
    IPAMConfig?: EndpointIPAMConfig | null;

    Links?: Array<string>;

    /**
     * MAC address for the endpoint on this network. The network driver might ignore this parameter.
     */
    MacAddress?: string;

    Aliases?: Array<string>;

    /**
     * DriverOpts is a mapping of driver options and values. These options are passed directly to the driver and are driver specific.
     */
    DriverOpts?: { [key: string]: string } | null;

    /**
     * This property determines which endpoint will provide the default gateway for a container. The endpoint with the highest priority will be used. If multiple endpoints have the same priority, endpoints are lexicographically sorted based on their network name, and the one that sorts first is picked.
     */
    GwPriority?: number;

    /**
     * Unique ID of the network.
     */
    NetworkID?: string;

    /**
     * Unique ID for the service endpoint in a Sandbox.
     */
    EndpointID?: string;

    /**
     * Gateway address for this network.
     */
    Gateway?: string;

    /**
     * IPv4 address.
     */
    IPAddress?: string;

    /**
     * Mask length of the IPv4 address.
     */
    IPPrefixLen?: number;

    /**
     * IPv6 gateway address.
     */
    IPv6Gateway?: string;

    /**
     * Global IPv6 address.
     */
    GlobalIPv6Address?: string;

    /**
     * Mask length of the global IPv6 address.
     */
    GlobalIPv6PrefixLen?: number;

    /**
     * List of all DNS names an endpoint has on a specific network. This list is based on the container name, network aliases, container short ID, and hostname.  These DNS names are non-fully qualified but can contain several dots. You can get fully qualified DNS names by appending &#x60;.&lt;network-name&gt;&#x60;. For instance, if container name is &#x60;my.ctr&#x60; and the network is named &#x60;testnet&#x60;, &#x60;DNSNames&#x60; will contain &#x60;my.ctr&#x60; and the FQDN will be &#x60;my.ctr.testnet&#x60;.
     */
    DNSNames?: Array<string>;
}
